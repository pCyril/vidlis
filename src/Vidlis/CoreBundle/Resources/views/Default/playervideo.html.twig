<div class="playerVideo">
    <div id="videoDiv">
        <div id="playerYt"></div>
    </div>
</div>
<div class="underVideo">
    <div id="viewCount"><span></span> vues</div>
    <div id="vote"><div class="like"></div></div>
    <div class="loadQueue"><img src="{{ asset('bundles/Vidlis/images/loadQueue.gif') }}"></div>
    <a href="{{ url('_formCreatePlaylist') }}" class="btn-save toModal"><i class="icon save mouseoverInfo" data-info="Sauvegarder la playlist"></i></a>
    <a href="#" class="btn-suggestion"><i class="icon suggestion mouseoverInfo" data-info="Afficher / Masquer les suggestions"></i></a>
    <a href="#" class="btn-trash"><i class="icon trash mouseoverInfo" data-info="Vider la playlist"></i></a>
    <a href="#" class="btn-grow"><i class="icon grow mouseoverInfo" data-info="Agrandir la vidÃ©o"></i></a>
</div>
<div id="infoLabel"></div>
<div id="playlistContent">
</div>
<div id="suggestionContent">
</div>
<div class="successAddedToQueue"></div>
<div class="errorMessage"></div>
<div class="closeShowPlaylist">></div>
<div class="powered">
    <a href="http://www.youtube.com/?gl=FR&hl=fr" target="_blank"><img src="https://developers.google.com/youtube/images/pwrdByYT-stack-white.png" width="100px"></a>
</div>
<div class="overlay"></div>
<div class="modal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title"></h4>
      </div>
      <div class="modal-body">
        <p></p>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script>
    // 2. This code loads the IFrame Player API code asynchronously.
    function onYouTubeIframeAPIReady() {
    }

    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
        event.target.playVideo();
    }

    // 5. The API calls this function when the player's state changes.
    //    The function indicates that when playing a video (state=1),
    //    the player should play for six seconds and then stop.
    var done = false;
    function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
            setTimeout(stopVideo, 6000);
            done = true;
        }
    }
    function stopVideo() {
        player.stopVideo();
    }
</script>